# This makefile is to be invoked from the main makefile "Makefile".
#
# It generates the directory "references" along with its content (which is a set of references images).

ifeq ($(REALLY_INVOKE),)
$(error "Please invoke this file with 'make references' as this also restores your git revision.")
endif

.NOTPARALLEL:

UNIT_SOURCES=$(wildcard *.tex)
#UNIT_SOURCES:=unittest_3d_3.tex

UNIT_PDF_REFERENCES=$(UNIT_SOURCES:%.tex=references/%.pdf)

OLD_BRANCH_STORE=Makefile.oldbranch

$(info Generating $(OLD_BRANCH_STORE) (if it does not already exist))
$(shell if [ ! -f $(OLD_BRANCH_STORE) ]; then echo "#!/bin/sh" > $(OLD_BRANCH_STORE) && echo "git checkout `git branch | grep \* | cut -c 3-`" >>$(OLD_BRANCH_STORE) && echo "rm -f $(OLD_BRANCH_STORE)" >> $(OLD_BRANCH_STORE) && chmod 0755 $(OLD_BRANCH_STORE); fi)
$(info Type ./$(OLD_BRANCH_STORE) to restore old branch)
$(info Prepare: copying all sources to references/)
$(shell mkdir -p references; find . -maxdepth 1 \( -name '*.tex' -o -name '*.checkout' \) -execdir cp --link -n -t references/ {} +)

DEFAULT_REFERENCE_BRANCH=1.3.1

.SECONDARY: $(UNIT_PDF_REFERENCES)

.PHONY: all

all: $(UNIT_PDF_REFERENCES)

restore:
	if [ -f $(OLD_BRANCH_STORE) ]; then ./$(OLD_BRANCH_STORE); fi

clean:
	rm -rf references

references/%.pdf:
	@echo "GENERATING $@"; \
	REFERENCE_SCRIPT=$(subst .pdf,.checkoutreferencerev.sh,$(subst references/,,$@));\
	echo "checking for $$REFERENCE_SCRIPT..."; \
	if [ -f $$REFERENCE_SCRIPT ]; then \
		cat $$REFERENCE_SCRIPT; \
		sh $$REFERENCE_SCRIPT; \
	else \
		echo "git checkout $(DEFAULT_REFERENCE_BRANCH)"; \
		git checkout $(DEFAULT_REFERENCE_BRANCH); \
	fi
	@cd references || exit 1;\
	export TEXINPUTS=..:$(TEXINPUTS); \
	pdflatex -shell-escape -interaction batchmode -halt-on-error `basename $(@:.pdf=.tex)`; CODE=$$?; cd ..; \
	echo "Type $(OLD_BRANCH_STORE) to restore original branch"; \
	rm -f $(@:.pdf=.tex); \
	exit $$CODE
